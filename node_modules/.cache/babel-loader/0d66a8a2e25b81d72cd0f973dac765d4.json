{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * Breakpoints enumerable.\n *\n * @type {{SMALL: string, MEDIUM: string, LARGE: string, XLARGE: string, XXLARGE: string}}\n */\n\n\nvar Breakpoints = exports.Breakpoints = {\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large',\n  XLARGE: 'xlarge',\n  XXLARGE: 'xxlarge'\n};\n/**\n * Badge color enumerable.\n *\n * @type {Object}\n */\n\nvar BadgeColors = exports.BadgeColors = {\n  INFO: 'info',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n/**\n * Button color enumerable.\n *\n * @type {Object}\n */\n\nvar ButtonColors = exports.ButtonColors = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  ALERT: 'alert',\n  WARNING: 'warning'\n};\n/**\n * Button group color enumerable.\n *\n * @type {Object}\n */\n\nvar ButtonGroupColors = exports.ButtonGroupColors = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  ALERT: 'alert',\n  WARNING: 'warning'\n};\n/**\n * Callout color enumerable.\n *\n * @type {Object}\n */\n\nvar CalloutColors = exports.CalloutColors = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n/**\n * Label color enumerable.\n *\n * @type {Object}\n */\n\nvar LabelColors = exports.LabelColors = {\n  INFO: 'info',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n/**\n * Progress colors enumerable.\n *\n * @type {Object}\n */\n\nvar ProgressColors = exports.ProgressColors = {\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n/**\n * Color meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\n\nvar Colors = exports.Colors = _extends({}, BadgeColors, ButtonColors, ButtonGroupColors, CalloutColors, LabelColors, ProgressColors);\n/**\n * Callout size enumerable.\n *\n * @type {Object}\n */\n\n\nvar CalloutSizes = exports.CalloutSizes = {\n  SMALL: 'small',\n  LARGE: 'large'\n};\n/**\n * Button size enumerable.\n *\n * @type {Object}\n */\n\nvar ButtonSizes = exports.ButtonSizes = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  LARGE: 'large'\n};\n/**\n * Button group size enumerable.\n *\n * @type {Object}\n */\n\nvar ButtonGroupSizes = exports.ButtonGroupSizes = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  LARGE: 'large'\n};\n/**\n * Switch size enumerable.\n *\n * @type {Object}\n */\n\nvar SwitchSizes = exports.SwitchSizes = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  LARGE: 'large'\n};\n/**\n * Size meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\n\nvar Sizes = exports.Sizes = _extends({}, ButtonSizes, ButtonGroupSizes, CalloutSizes, SwitchSizes);\n/**\n * Horizontal alignment enumerable.\n *\n * @type {Object}\n */\n\n\nvar HorizontalAlignments = exports.HorizontalAlignments = {\n  CENTER: 'center',\n  RIGHT: 'right',\n  JUSTIFY: 'justify',\n  SPACED: 'spaced'\n};\n/**\n * Vertical alignment enumerable.\n *\n * @type {Object}\n */\n\nvar VerticalAlignments = exports.VerticalAlignments = {\n  TOP: 'top',\n  MIDDLE: 'middle',\n  BOTTOM: 'bottom',\n  STRETCH: 'stretch'\n};\n/**\n * Menu alignment enumerable.\n *\n * @type {{RIGHT: string, CENTER: string}}\n */\n\nvar MenuAlignments = exports.MenuAlignments = {\n  RIGHT: 'right',\n  CENTER: 'center'\n};\n/**\n * Alignments meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\n\nvar Alignments = exports.Alignments = _extends({}, HorizontalAlignments, VerticalAlignments, MenuAlignments);\n/**\n * Float types enumerable.\n *\n * @type {{LEFT: string, CENTER: string, RIGHT: string}}\n */\n\n\nvar FloatTypes = exports.FloatTypes = {\n  LEFT: 'left',\n  CENTER: 'center',\n  RIGHT: 'right'\n};\n/**\n * Switch type enumerable.\n *\n * @type {Object}\n */\n\nvar SwitchInputTypes = exports.SwitchInputTypes = {\n  CHECKBOX: 'checkbox',\n  RADIO: 'radio'\n};\n/**\n * Input type meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\n\nvar InputTypes = exports.InputTypes = _extends({}, SwitchInputTypes);\n/**\n * Gutter type enumerable.\n *\n * @type {Object}\n */\n\n\nvar GutterTypes = exports.GutterTypes = {\n  MARGIN: 'margin',\n  PADDING: 'padding'\n};\n/**\n * Extended breakpoints enumerable (includes 'ALL' option, which is useful when breakpoint is not defined).\n *\n * @type {{SMALL: string, MEDIUM: string, LARGE: string, XLARGE: string, XXLARGE: string, ALL: string}}\n */\n\nvar ExtendedBreakpoints = exports.ExtendedBreakpoints = {\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large',\n  XLARGE: 'xlarge',\n  XXLARGE: 'xxlarge',\n  ALL: 'all'\n};\n/**\n * Space control enumerable.\n *\n * @type {Object}\n */\n\nvar SpaceControls = exports.SpaceControls = {\n  AUTO: 'auto',\n  GROW: 'grow',\n  SHRINK: 'shrink'\n};","map":{"version":3,"sources":["/home/sme777/Desktop/popDNA/node_modules/react-foundation/lib/enums.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","Breakpoints","SMALL","MEDIUM","LARGE","XLARGE","XXLARGE","BadgeColors","INFO","SECONDARY","SUCCESS","WARNING","ALERT","ButtonColors","PRIMARY","ButtonGroupColors","CalloutColors","LabelColors","ProgressColors","Colors","CalloutSizes","ButtonSizes","TINY","ButtonGroupSizes","SwitchSizes","Sizes","HorizontalAlignments","CENTER","RIGHT","JUSTIFY","SPACED","VerticalAlignments","TOP","MIDDLE","BOTTOM","STRETCH","MenuAlignments","Alignments","FloatTypes","LEFT","SwitchInputTypes","CHECKBOX","RADIO","InputTypes","GutterTypes","MARGIN","PADDING","ExtendedBreakpoints","ALL","SpaceControls","AUTO","GROW","SHRINK"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,WAAW,GAAGb,OAAO,CAACa,WAAR,GAAsB;AACtCC,EAAAA,KAAK,EAAE,OAD+B;AAEtCC,EAAAA,MAAM,EAAE,QAF8B;AAGtCC,EAAAA,KAAK,EAAE,OAH+B;AAItCC,EAAAA,MAAM,EAAE,QAJ8B;AAKtCC,EAAAA,OAAO,EAAE;AAL6B,CAAxC;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAGnB,OAAO,CAACmB,WAAR,GAAsB;AACtCC,EAAAA,IAAI,EAAE,MADgC;AAEtCC,EAAAA,SAAS,EAAE,WAF2B;AAGtCC,EAAAA,OAAO,EAAE,SAH6B;AAItCC,EAAAA,OAAO,EAAE,SAJ6B;AAKtCC,EAAAA,KAAK,EAAE;AAL+B,CAAxC;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAGzB,OAAO,CAACyB,YAAR,GAAuB;AACxCC,EAAAA,OAAO,EAAE,SAD+B;AAExCL,EAAAA,SAAS,EAAE,WAF6B;AAGxCC,EAAAA,OAAO,EAAE,SAH+B;AAIxCE,EAAAA,KAAK,EAAE,OAJiC;AAKxCD,EAAAA,OAAO,EAAE;AAL+B,CAA1C;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAII,iBAAiB,GAAG3B,OAAO,CAAC2B,iBAAR,GAA4B;AAClDD,EAAAA,OAAO,EAAE,SADyC;AAElDL,EAAAA,SAAS,EAAE,WAFuC;AAGlDC,EAAAA,OAAO,EAAE,SAHyC;AAIlDE,EAAAA,KAAK,EAAE,OAJ2C;AAKlDD,EAAAA,OAAO,EAAE;AALyC,CAApD;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAIK,aAAa,GAAG5B,OAAO,CAAC4B,aAAR,GAAwB;AAC1CF,EAAAA,OAAO,EAAE,SADiC;AAE1CL,EAAAA,SAAS,EAAE,WAF+B;AAG1CC,EAAAA,OAAO,EAAE,SAHiC;AAI1CC,EAAAA,OAAO,EAAE,SAJiC;AAK1CC,EAAAA,KAAK,EAAE;AALmC,CAA5C;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAIK,WAAW,GAAG7B,OAAO,CAAC6B,WAAR,GAAsB;AACtCT,EAAAA,IAAI,EAAE,MADgC;AAEtCC,EAAAA,SAAS,EAAE,WAF2B;AAGtCC,EAAAA,OAAO,EAAE,SAH6B;AAItCC,EAAAA,OAAO,EAAE,SAJ6B;AAKtCC,EAAAA,KAAK,EAAE;AAL+B,CAAxC;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAIM,cAAc,GAAG9B,OAAO,CAAC8B,cAAR,GAAyB;AAC5CT,EAAAA,SAAS,EAAE,WADiC;AAE5CC,EAAAA,OAAO,EAAE,SAFmC;AAG5CC,EAAAA,OAAO,EAAE,SAHmC;AAI5CC,EAAAA,KAAK,EAAE;AAJqC,CAA9C;AAOA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIO,MAAM,GAAG/B,OAAO,CAAC+B,MAAR,GAAiB7B,QAAQ,CAAC,EAAD,EAAKiB,WAAL,EAAkBM,YAAlB,EAAgCE,iBAAhC,EAAmDC,aAAnD,EAAkEC,WAAlE,EAA+EC,cAA/E,CAAtC;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,YAAY,GAAGhC,OAAO,CAACgC,YAAR,GAAuB;AACxClB,EAAAA,KAAK,EAAE,OADiC;AAExCE,EAAAA,KAAK,EAAE;AAFiC,CAA1C;AAKA;AACA;AACA;AACA;AACA;;AACA,IAAIiB,WAAW,GAAGjC,OAAO,CAACiC,WAAR,GAAsB;AACtCC,EAAAA,IAAI,EAAE,MADgC;AAEtCpB,EAAAA,KAAK,EAAE,OAF+B;AAGtCE,EAAAA,KAAK,EAAE;AAH+B,CAAxC;AAMA;AACA;AACA;AACA;AACA;;AACA,IAAImB,gBAAgB,GAAGnC,OAAO,CAACmC,gBAAR,GAA2B;AAChDD,EAAAA,IAAI,EAAE,MAD0C;AAEhDpB,EAAAA,KAAK,EAAE,OAFyC;AAGhDE,EAAAA,KAAK,EAAE;AAHyC,CAAlD;AAMA;AACA;AACA;AACA;AACA;;AACA,IAAIoB,WAAW,GAAGpC,OAAO,CAACoC,WAAR,GAAsB;AACtCF,EAAAA,IAAI,EAAE,MADgC;AAEtCpB,EAAAA,KAAK,EAAE,OAF+B;AAGtCE,EAAAA,KAAK,EAAE;AAH+B,CAAxC;AAMA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIqB,KAAK,GAAGrC,OAAO,CAACqC,KAAR,GAAgBnC,QAAQ,CAAC,EAAD,EAAK+B,WAAL,EAAkBE,gBAAlB,EAAoCH,YAApC,EAAkDI,WAAlD,CAApC;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,oBAAoB,GAAGtC,OAAO,CAACsC,oBAAR,GAA+B;AACxDC,EAAAA,MAAM,EAAE,QADgD;AAExDC,EAAAA,KAAK,EAAE,OAFiD;AAGxDC,EAAAA,OAAO,EAAE,SAH+C;AAIxDC,EAAAA,MAAM,EAAE;AAJgD,CAA1D;AAOA;AACA;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB,GAAG3C,OAAO,CAAC2C,kBAAR,GAA6B;AACpDC,EAAAA,GAAG,EAAE,KAD+C;AAEpDC,EAAAA,MAAM,EAAE,QAF4C;AAGpDC,EAAAA,MAAM,EAAE,QAH4C;AAIpDC,EAAAA,OAAO,EAAE;AAJ2C,CAAtD;AAOA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAGhD,OAAO,CAACgD,cAAR,GAAyB;AAC5CR,EAAAA,KAAK,EAAE,OADqC;AAE5CD,EAAAA,MAAM,EAAE;AAFoC,CAA9C;AAKA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIU,UAAU,GAAGjD,OAAO,CAACiD,UAAR,GAAqB/C,QAAQ,CAAC,EAAD,EAAKoC,oBAAL,EAA2BK,kBAA3B,EAA+CK,cAA/C,CAA9C;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,UAAU,GAAGlD,OAAO,CAACkD,UAAR,GAAqB;AACpCC,EAAAA,IAAI,EAAE,MAD8B;AAEpCZ,EAAAA,MAAM,EAAE,QAF4B;AAGpCC,EAAAA,KAAK,EAAE;AAH6B,CAAtC;AAMA;AACA;AACA;AACA;AACA;;AACA,IAAIY,gBAAgB,GAAGpD,OAAO,CAACoD,gBAAR,GAA2B;AAChDC,EAAAA,QAAQ,EAAE,UADsC;AAEhDC,EAAAA,KAAK,EAAE;AAFyC,CAAlD;AAKA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAGvD,OAAO,CAACuD,UAAR,GAAqBrD,QAAQ,CAAC,EAAD,EAAKkD,gBAAL,CAA9C;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAII,WAAW,GAAGxD,OAAO,CAACwD,WAAR,GAAsB;AACtCC,EAAAA,MAAM,EAAE,QAD8B;AAEtCC,EAAAA,OAAO,EAAE;AAF6B,CAAxC;AAKA;AACA;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB,GAAG3D,OAAO,CAAC2D,mBAAR,GAA8B;AACtD7C,EAAAA,KAAK,EAAE,OAD+C;AAEtDC,EAAAA,MAAM,EAAE,QAF8C;AAGtDC,EAAAA,KAAK,EAAE,OAH+C;AAItDC,EAAAA,MAAM,EAAE,QAJ8C;AAKtDC,EAAAA,OAAO,EAAE,SAL6C;AAMtD0C,EAAAA,GAAG,EAAE;AANiD,CAAxD;AASA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG7D,OAAO,CAAC6D,aAAR,GAAwB;AAC1CC,EAAAA,IAAI,EAAE,MADoC;AAE1CC,EAAAA,IAAI,EAAE,MAFoC;AAG1CC,EAAAA,MAAM,EAAE;AAHkC,CAA5C","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Breakpoints enumerable.\n *\n * @type {{SMALL: string, MEDIUM: string, LARGE: string, XLARGE: string, XXLARGE: string}}\n */\nvar Breakpoints = exports.Breakpoints = {\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large',\n  XLARGE: 'xlarge',\n  XXLARGE: 'xxlarge'\n};\n\n/**\n * Badge color enumerable.\n *\n * @type {Object}\n */\nvar BadgeColors = exports.BadgeColors = {\n  INFO: 'info',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n\n/**\n * Button color enumerable.\n *\n * @type {Object}\n */\nvar ButtonColors = exports.ButtonColors = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  ALERT: 'alert',\n  WARNING: 'warning'\n};\n\n/**\n * Button group color enumerable.\n *\n * @type {Object}\n */\nvar ButtonGroupColors = exports.ButtonGroupColors = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  ALERT: 'alert',\n  WARNING: 'warning'\n};\n\n/**\n * Callout color enumerable.\n *\n * @type {Object}\n */\nvar CalloutColors = exports.CalloutColors = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n\n/**\n * Label color enumerable.\n *\n * @type {Object}\n */\nvar LabelColors = exports.LabelColors = {\n  INFO: 'info',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n\n/**\n * Progress colors enumerable.\n *\n * @type {Object}\n */\nvar ProgressColors = exports.ProgressColors = {\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ALERT: 'alert'\n};\n\n/**\n * Color meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\nvar Colors = exports.Colors = _extends({}, BadgeColors, ButtonColors, ButtonGroupColors, CalloutColors, LabelColors, ProgressColors);\n\n/**\n * Callout size enumerable.\n *\n * @type {Object}\n */\nvar CalloutSizes = exports.CalloutSizes = {\n  SMALL: 'small',\n  LARGE: 'large'\n};\n\n/**\n * Button size enumerable.\n *\n * @type {Object}\n */\nvar ButtonSizes = exports.ButtonSizes = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  LARGE: 'large'\n};\n\n/**\n * Button group size enumerable.\n *\n * @type {Object}\n */\nvar ButtonGroupSizes = exports.ButtonGroupSizes = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  LARGE: 'large'\n};\n\n/**\n * Switch size enumerable.\n *\n * @type {Object}\n */\nvar SwitchSizes = exports.SwitchSizes = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  LARGE: 'large'\n};\n\n/**\n * Size meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\nvar Sizes = exports.Sizes = _extends({}, ButtonSizes, ButtonGroupSizes, CalloutSizes, SwitchSizes);\n\n/**\n * Horizontal alignment enumerable.\n *\n * @type {Object}\n */\nvar HorizontalAlignments = exports.HorizontalAlignments = {\n  CENTER: 'center',\n  RIGHT: 'right',\n  JUSTIFY: 'justify',\n  SPACED: 'spaced'\n};\n\n/**\n * Vertical alignment enumerable.\n *\n * @type {Object}\n */\nvar VerticalAlignments = exports.VerticalAlignments = {\n  TOP: 'top',\n  MIDDLE: 'middle',\n  BOTTOM: 'bottom',\n  STRETCH: 'stretch'\n};\n\n/**\n * Menu alignment enumerable.\n *\n * @type {{RIGHT: string, CENTER: string}}\n */\nvar MenuAlignments = exports.MenuAlignments = {\n  RIGHT: 'right',\n  CENTER: 'center'\n};\n\n/**\n * Alignments meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\nvar Alignments = exports.Alignments = _extends({}, HorizontalAlignments, VerticalAlignments, MenuAlignments);\n\n/**\n * Float types enumerable.\n *\n * @type {{LEFT: string, CENTER: string, RIGHT: string}}\n */\nvar FloatTypes = exports.FloatTypes = {\n  LEFT: 'left',\n  CENTER: 'center',\n  RIGHT: 'right'\n};\n\n/**\n * Switch type enumerable.\n *\n * @type {Object}\n */\nvar SwitchInputTypes = exports.SwitchInputTypes = {\n  CHECKBOX: 'checkbox',\n  RADIO: 'radio'\n};\n\n/**\n * Input type meta-enumerable.\n * This is exposed to the consumer, while the sub-sets are only used internally.\n *\n * @type {Object}\n */\nvar InputTypes = exports.InputTypes = _extends({}, SwitchInputTypes);\n\n/**\n * Gutter type enumerable.\n *\n * @type {Object}\n */\nvar GutterTypes = exports.GutterTypes = {\n  MARGIN: 'margin',\n  PADDING: 'padding'\n};\n\n/**\n * Extended breakpoints enumerable (includes 'ALL' option, which is useful when breakpoint is not defined).\n *\n * @type {{SMALL: string, MEDIUM: string, LARGE: string, XLARGE: string, XXLARGE: string, ALL: string}}\n */\nvar ExtendedBreakpoints = exports.ExtendedBreakpoints = {\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large',\n  XLARGE: 'xlarge',\n  XXLARGE: 'xxlarge',\n  ALL: 'all'\n};\n\n/**\n * Space control enumerable.\n *\n * @type {Object}\n */\nvar SpaceControls = exports.SpaceControls = {\n  AUTO: 'auto',\n  GROW: 'grow',\n  SHRINK: 'shrink'\n};"]},"metadata":{},"sourceType":"script"}